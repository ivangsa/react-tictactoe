{"version":3,"sources":["ai/index.js","Board.js","store/actionTypes.js","store/actions.js","Game.js","store/reducers.js","store/index.js","index.js"],"names":["randomMove","boardState","emptyCells","getEmptyCells","Math","floor","random","length","reduce","symbol","index","concat","Object","toConsumableArray","Board","props","rows","_loop","i","push","react_default","a","createElement","Square","value","squares","onClick","key","className","NewGamePanel","ChooseSymbolPanel","newGameAction","matchId","require","v4","nextPlayerSymbol","computerPlayerSymbol","type","payload","selectHumanSymbolAction","humanPlayerSymbol","moveAction","position","undoAction","player","square","redoAction","Game","this","calculateWinner","nextProps","doComputerMove","calculateNextMove","_this","renderGame","onHumanClick","onNewGameClick","game","_this2","winner","status","React","Component","lines","_lines$i","slicedToArray","b","c","connect","state","objectSpread","dispatch","bindActionCreators","actions","other","initialState","Array","fill","history","step","createStore","arguments","undefined","action","move","slice","ReactDOM","render","es","store","src_Game","document","getElementById"],"mappings":"ufAOMA,EAAa,SAASC,GAC1B,IAAMC,EAAaC,EAAcF,GAEjC,OAAOC,EADQE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAWK,OAAS,MAI3DJ,EAAgB,SAASF,GAC7B,OAAOA,EAAWO,OAAO,SAACN,EAAYO,EAAQC,GAC5C,OAAQD,EAAkCP,EAAnC,GAAAS,OAAAC,OAAAC,EAAA,EAAAD,CAAcV,GAAd,CAA0BQ,KAChC,KCdE,SAASI,EAAMC,GAEpB,IADA,IAAIC,EAAO,GADgBC,EAAA,SAElBC,GACPF,EAAKG,KAAKC,EAAAC,EAAAC,cAACC,EAAD,CAAQC,MAAOT,EAAMU,QAAQP,GAAIQ,QAAS,kBAAMX,EAAMW,QAAQR,IAAIS,IAAKT,MAD1EA,EAAI,EAAGA,EAAI,EAAGA,IAAKD,EAAnBC,GAGT,OAAOE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qBAAqBZ,GAG7C,SAASO,EAAOR,GACd,IAAMa,EAAYb,EAAMS,MAAQ,0BAChC,OAAOJ,EAAAC,EAAAC,cAAA,OAAKM,UAAWA,EAAWF,QAASX,EAAMW,UAG5C,SAASG,EAAad,GAC3B,OACEK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,uBAAuBF,QAASX,EAAMW,SAArD,aAKC,SAASI,EAAkBf,GAChC,OACEK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACbR,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2BAA2BF,QAAS,kBAAMX,EAAMW,QAAQ,OAAvE,KAGAN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2BAA2BF,QAAS,kBAAMX,EAAMW,QAAQ,OAAvE,MC9BC,ICEMK,EAAgB,WAC3B,IAAMC,EAAUC,EAAQ,IAAQC,KAE5BC,EAAmB,KACnBC,EAAuB,KAK3B,OAP2BhC,KAAKE,UAAY,KAK1C8B,EADAD,EAAmB/B,KAAKE,UAAY,GAAM,IAAM,KAG3C,CACL+B,KDZ2B,kBCa3BC,QAAS,CACPN,UACAG,mBACAC,0BAKOG,EAA0B,SAAAC,GACrC,MAAO,CACLH,KDtBsC,6BCuBtCC,QAAS,CACPE,uBAKOC,EAAa,SAAAC,GACxB,MAAO,CACLL,KD9BuB,cC+BvBC,QAAS,CACPI,cAKOC,EAAa,SAACC,EAAQC,GACjC,MAAO,CACLR,KDtCuB,cCuCvBC,QAAS,KAIAQ,EAAa,SAACF,EAAQC,GACjC,MAAO,CACLR,KD5CuB,cC6CvBC,QAAS,SClCPS,2LAEFC,KAAKjC,MAAMgB,qDAGAb,GACX,IAAMjB,EAAa+C,KAAKjC,MAAMd,WAC1BA,EAAWiB,IAAM+B,EAAgBhD,IAGrC+C,KAAKjC,MAAM0B,WAAWvB,qDAGEgC,GAEtBA,EAAUf,kBACVe,EAAUd,uBAAyBc,EAAUf,mBAC5Cc,EAAgBC,EAAUjD,aAE3B+C,KAAKG,eAAeD,EAAUjD,mDAInBA,GACb,IAAMyC,EJvCuB,SAACzC,EAAYkC,GAC5C,OAAKlC,EAAW,GAGTD,EAAWC,GAFT,EIqCUmD,CAAkBnD,EAAY+C,KAAKjC,MAAMqB,sBAC1DY,KAAKjC,MAAM0B,WAAWC,kHAOf,IAAAW,EAAAL,KACD/C,EAAa+C,KAAKjC,MAAMd,WACfgD,EAAgBhD,GAE/B,OAAK+C,KAAKjC,MAAMiB,QAIXgB,KAAKjC,MAAMoB,iBAQZa,KAAKjC,MAAMiB,QACNgB,KAAKM,WAAWlC,EAAAC,EAAAC,cAACR,EAAD,CAAOW,QAASxB,EAAYyB,QAAS,SAAAR,GAAC,OAAImC,EAAKE,aAAarC,YADrF,EAPS8B,KAAKM,WAAWlC,EAAAC,EAAAC,cAACQ,EAAD,CAAmBJ,QAAS,SAAAc,GAAiB,OAAIa,EAAKtC,MAAMwB,wBAAwBC,OAJpGQ,KAAKM,WAAWlC,EAAAC,EAAAC,cAACO,EAAD,CAAcH,QAAS,kBAAM2B,EAAKG,wDAgBlDC,GAAM,IAAAC,EAAAV,KAETW,EAASV,EADID,KAAKjC,MAAMd,YAGxB2D,EAAM,kBAAAjD,OACDqC,KAAKjC,MAAMiB,QADV,iBAAArB,OAEHqC,KAAKjC,MAAMyB,kBAFR,oBAAA7B,OAGAqC,KAAKjC,MAAMqB,qBAHX,uBAAAzB,OAIGqC,KAAKjC,MAAMoB,iBAJd,kBAAAxB,OAKFgD,GAEV,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACZ6B,GAEHrC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sBACbR,EAAAC,EAAAC,cAAA,WAAMsC,GACNxC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,uBAAuBF,QAAS,kBAAMgC,EAAKF,mBAA1D,uBAvESK,IAAMC,WA+EzB,SAASb,EAAgBxB,GAavB,IAXA,IAAMsC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGA7C,EAAI,EAAGA,EAAI6C,EAAMxD,OAAQW,IAAK,KAAA8C,EAAApD,OAAAqD,EAAA,EAAArD,CACnBmD,EAAM7C,GADa,GAC9BG,EAD8B2C,EAAA,GAC3BE,EAD2BF,EAAA,GACxBG,EADwBH,EAAA,GAErC,GAAIvC,EAAQJ,IAAMI,EAAQJ,KAAOI,EAAQyC,IAAMzC,EAAQJ,KAAOI,EAAQ0C,GACpE,OAAO1C,EAAQJ,GAGnB,OAAO,KAIM+C,kBA9Gf,SAAyBC,GACvB,OAAOzD,OAAA0D,EAAA,EAAA1D,CAAA,GAAKyD,IAGd,SAA4BE,GAC1B,OAAOC,YAAmB5D,OAAA0D,EAAA,EAAA1D,CAAA,GAAK6D,GAAWF,IAyG7BH,CAGbrB,GCrFF,SAAS2B,EAAMjE,GACb,OAAc,MAAVA,EACK,KAES,MAAXA,EAAiB,IAAM,ICpCzB,IAAMkE,EAAe,CAC1B3C,QAAS,KACT/B,WAAY2E,MAAM,GAAGC,KAAK,MAC1BrC,kBAAmB,KACnBJ,qBAAsB,KACtBD,iBAAkB,KAClB2C,QAAS,GACTC,KAAM,GAGOC,cDVa,WAAwB,IAAvBX,EAAuBY,UAAA1E,OAAA,QAAA2E,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAA1E,OAAA,EAAA0E,UAAA,QAAAC,EAClD,GHJ6B,oBGIzBC,EAAO9C,KACT,OAAOzB,OAAA0D,EAAA,EAAA1D,CAAA,GACF+D,EACAQ,EAAO7C,QAFZ,CAGEwC,QAAS,CAACH,EAAa1E,YACvBuC,kBAAmBkC,EAAMS,EAAO7C,QAAQF,wBAG5C,GHXwC,+BGWpC+C,EAAO9C,KACT,OAAOzB,OAAA0D,EAAA,EAAA1D,CAAA,GACFyD,EACAc,EAAO7C,QAFZ,CAGEH,iBAAkBgD,EAAO7C,QAAQE,kBACjCJ,qBAAsBsC,EAAMS,EAAO7C,QAAQE,qBAG/C,GHlByB,gBGkBrB2C,EAAO9C,KAAkC,CAC3C,IAAM+C,EAAO,CAAExC,OAAQyB,EAAMlC,iBAAkBO,SAAUyC,EAAO7C,QAAQI,UAClEzC,EAAUW,OAAAC,EAAA,EAAAD,CAAOyD,EAAMpE,YAE7B,OADAA,EAAWmF,EAAK1C,UAAY2B,EAAMlC,iBAC3BvB,OAAA0D,EAAA,EAAA1D,CAAA,GACFyD,EADL,CAEEpE,aACAkC,iBAAkBuC,EAAML,EAAMlC,kBAC9B4C,KAAMV,EAAMU,KAAO,EACnBD,QAAO,GAAAnE,OAAAC,OAAAC,EAAA,EAAAD,CAAMyD,EAAMS,QAAQO,MAAM,EAAGhB,EAAMU,OAAnC,CAA0CK,MAGrD,OAAOf,GCnBgCM,SCNzCW,IAASC,OACPnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAUC,MAAOA,GACfrE,EAAAC,EAAAC,cAACoE,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.c1676349.chunk.js","sourcesContent":["export const calculateNextMove = (boardState, nextPlayerSymbol) => {\r\n  if (!boardState[4]) {\r\n    return 4;\r\n  }\r\n  return randomMove(boardState);\r\n};\r\n\r\nconst randomMove = function(boardState) {\r\n  const emptyCells = getEmptyCells(boardState);\r\n  const random = Math.floor(Math.random() * (emptyCells.length - 1));\r\n  return emptyCells[random];\r\n};\r\n\r\nconst getEmptyCells = function(boardState) {\r\n  return boardState.reduce((emptyCells, symbol, index) => {\r\n    return !symbol ? [...emptyCells, index] : emptyCells; // FIXME\r\n  }, []);\r\n};\r\n","import React from 'react';\r\n\r\nexport function Board(props) {\r\n  let rows = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    rows.push(<Square value={props.squares[i]} onClick={() => props.onClick(i)} key={i} />);\r\n  }\r\n  return <div className=\"tic-tac-toe-board\">{rows}</div>;\r\n}\r\n\r\nfunction Square(props) {\r\n  const className = props.value + 'Symbol tic-tac-toe-cell';\r\n  return <div className={className} onClick={props.onClick} />;\r\n}\r\n\r\nexport function NewGamePanel(props) {\r\n  return (\r\n    <div className=\"tic-tac-toe-info\">\r\n      <div className=\"tic-tac-toe-new-game\" onClick={props.onClick}>New Game</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ChooseSymbolPanel(props) {\r\n  return (\r\n    <div className=\"tic-tac-toe-info\">\r\n      <div>Choose your symbol</div>\r\n      <div className=\"oSymbol tic-tac-toe-cell\" onClick={() => props.onClick('o')}>\r\n        o\r\n      </div>\r\n      <div className=\"xSymbol tic-tac-toe-cell\" onClick={() => props.onClick('x')}>\r\n        x\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function EndGameResult(props) {\r\n  return (\r\n    <div className=\"tic-tac-toe-info\">\r\n      <div onClick={props.onClick}>End Game</div>\r\n    </div>\r\n  );\r\n}\r\n","export const NEW_GAME_ACTION = 'NEW_GAME_ACTION';\r\nexport const SELECT_HUMAN_SYMBOL_ACTION = 'SELECT_HUMAN_SYMBOL_ACTION';\r\nexport const MOVE_ACTION = 'MOVE_ACTION';\r\nexport const UNDO_ACTION = 'UNDO_ACTION';\r\nexport const REDO_ACTION = 'REDO_ACTION';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const newGameAction = () => {\r\n  const matchId = require('uuid').v4();\r\n  const isComputerStarting = Math.random() >= 0.5;\r\n  let nextPlayerSymbol = null;\r\n  let computerPlayerSymbol = null;\r\n  if (isComputerStarting) {\r\n    nextPlayerSymbol = Math.random() >= 0.5 ? 'x' : 'o';\r\n    computerPlayerSymbol = nextPlayerSymbol;\r\n  }\r\n  return {\r\n    type: actionTypes.NEW_GAME_ACTION,\r\n    payload: {\r\n      matchId,\r\n      nextPlayerSymbol,\r\n      computerPlayerSymbol\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectHumanSymbolAction = humanPlayerSymbol => {\r\n  return {\r\n    type: actionTypes.SELECT_HUMAN_SYMBOL_ACTION,\r\n    payload: {\r\n      humanPlayerSymbol\r\n    }\r\n  };\r\n};\r\n\r\nexport const moveAction = position => {\r\n  return {\r\n    type: actionTypes.MOVE_ACTION,\r\n    payload: {\r\n      position\r\n    }\r\n  };\r\n};\r\n\r\nexport const undoAction = (player, square) => {\r\n  return {\r\n    type: actionTypes.UNDO_ACTION,\r\n    payload: {}\r\n  };\r\n};\r\n\r\nexport const redoAction = (player, square) => {\r\n  return {\r\n    type: actionTypes.REDO_ACTION,\r\n    payload: {}\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { calculateNextMove } from './ai';\r\nimport { Board, ChooseSymbolPanel, NewGamePanel, EndGameResult } from './Board';\r\nimport * as actions from './store/actions';\r\n\r\nfunction mapStateToProps(state) {\r\n  return { ...state };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ ...actions }, dispatch);\r\n}\r\n\r\nclass Game extends React.Component {\r\n  onNewGameClick() {\r\n    this.props.newGameAction();\r\n  }\r\n\r\n  onHumanClick(i) {\r\n    const boardState = this.props.boardState;\r\n    if (boardState[i] || calculateWinner(boardState)) {\r\n      return;\r\n    }\r\n    this.props.moveAction(i);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.nextPlayerSymbol &&\r\n      nextProps.computerPlayerSymbol === nextProps.nextPlayerSymbol &&\r\n      !calculateWinner(nextProps.boardState)\r\n    ) {\r\n      this.doComputerMove(nextProps.boardState);\r\n    }\r\n  }\r\n\r\n  doComputerMove(boardState) {\r\n    const position = calculateNextMove(boardState, this.props.computerPlayerSymbol);\r\n    this.props.moveAction(position);\r\n  }\r\n\r\n  onUndoClick() {}\r\n\r\n  onRedoClick() {}\r\n\r\n  render() {\r\n    const boardState = this.props.boardState;\r\n    const winner = calculateWinner(boardState);\r\n\r\n    if (!this.props.matchId) {\r\n      return this.renderGame(<NewGamePanel onClick={() => this.onNewGameClick()} />);\r\n    }\r\n\r\n    if (!this.props.nextPlayerSymbol) {\r\n      return this.renderGame(<ChooseSymbolPanel onClick={humanPlayerSymbol => this.props.selectHumanSymbolAction(humanPlayerSymbol)} />);\r\n    }\r\n\r\n    if (false && winner) {\r\n      return this.renderGame(<EndGameResult onClick={() => this.onNewGameClick()} />);\r\n    }\r\n\r\n    if (this.props.matchId) {\r\n      return this.renderGame(<Board squares={boardState} onClick={i => this.onHumanClick(i)} />);\r\n    }\r\n  }\r\n\r\n  renderGame(game) {\r\n    const boardState = this.props.boardState;\r\n    const winner = calculateWinner(boardState);\r\n\r\n    const status = `\r\n    MatchId: ${this.props.matchId}\r\n    Human: ${this.props.humanPlayerSymbol}\r\n    Computer: ${this.props.computerPlayerSymbol}\r\n    Next player: ${this.props.nextPlayerSymbol}\r\n    Winner: ${winner}`;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"tic-tac-toe-game\">\r\n          {game}\r\n        </div>\r\n        <div className=\"tic-tac-toe-status\">\r\n          <pre>{status}</pre>\r\n          <div className=\"tic-tac-toe-new-game\" onClick={() => this.onNewGameClick()}>Reset Game</div>\r\n        </div>\r\n      </div>\r\n    );\r\n    // return <div className=\"tic-tac-toe-game\">{game}</div>;\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  /* prettier-ignore */\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//export default Game;\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Game);\r\n","import { initialState } from '.';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const boardReducer = (state = {}, action) => {\r\n  if (action.type === actionTypes.NEW_GAME_ACTION) {\r\n    return {\r\n      ...initialState,\r\n      ...action.payload,\r\n      history: [initialState.boardState],\r\n      humanPlayerSymbol: other(action.payload.computerPlayerSymbol)\r\n    };\r\n  }\r\n  if (action.type === actionTypes.SELECT_HUMAN_SYMBOL_ACTION) {\r\n    return {\r\n      ...state,\r\n      ...action.payload,\r\n      nextPlayerSymbol: action.payload.humanPlayerSymbol,\r\n      computerPlayerSymbol: other(action.payload.humanPlayerSymbol)\r\n    };\r\n  }\r\n  if (action.type === actionTypes.MOVE_ACTION) {\r\n    const move = { player: state.nextPlayerSymbol, position: action.payload.position };\r\n    const boardState = [...state.boardState];\r\n    boardState[move.position] = state.nextPlayerSymbol;\r\n    return {\r\n      ...state,\r\n      boardState,\r\n      nextPlayerSymbol: other(state.nextPlayerSymbol),\r\n      step: state.step + 1,\r\n      history: [...state.history.slice(0, state.step), move]\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nfunction other(symbol) {\r\n  if (symbol == null) {\r\n    return null;\r\n  }\r\n  return symbol === 'o' ? 'x' : 'o';\r\n}\r\n","import { createStore } from 'redux';\r\nimport { boardReducer } from './reducers';\r\n\r\nexport const initialState = {\r\n  matchId: null, //string, identifies the current match, required\r\n  boardState: Array(9).fill(null), // array of chars ( one of ['o','x', null]), required\r\n  humanPlayerSymbol: null, //  ( one of ['o','x', null])\r\n  computerPlayerSymbol: null, // ( one of ['o','x', null])\r\n  nextPlayerSymbol: null, // ( one of ['o','x', null])\r\n  history: [], // array of moves: { player: ( one of ['o','x']) , position: [0-8] }\r\n  step: 0\r\n};\r\n\r\nexport default createStore(boardReducer, initialState);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Game from './Game';\nimport store from './store';\nimport './style.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}